{"version":3,"sources":["components/Filter/Filter.module.css","components/App.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","allContacts","contactFilter","contact","name","toLocaleLowerCase","includes","addContact","createAction","number","payload","id","uuid4","removeContact","filterContacts","ContactForm","useState","contactName","setContactName","contactNumber","setContactNumber","useSelector","dispatch","useDispatch","onInputValue","e","target","value","onSubmit","preventDefault","some","alert","className","ContactFormStl","label","type","onChange","input","buttonSubmit","ContactListItem","onRemove","ContactListItemStl","container","contactInfo","action","onClick","ContactsList","visibleContacts","ContactListStl","contactList","map","visibleContact","Filter","FilterStl","filterContainer","App","AppStl","heading","length","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","exportedStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.6cb1b614.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\",\"heading\":\"App_heading__2TEJG\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getContacts(state);\n  const contactFilter = getFilter(state);\n\n  return allContacts.filter(contact =>\n    contact.name\n      .toLocaleLowerCase()\n      .includes(contactFilter.toLocaleLowerCase()),\n  );\n};\n","import { v4 as uuid4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contact/Add', (name, number) => ({\n  payload: {\n    id: uuid4(),\n    name,\n    number,\n  },\n}));\n\nexport const removeContact = createAction('contact/Remove');\n\nexport const filterContacts = createAction('contact/Filter');\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nimport ContactFormStl from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onAddContact = (name, number) => dispatch(addContact(name, number));\n\n  const onInputValue = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'contactName':\n        setContactName(value);\n        break;\n      case 'contactNumber':\n        setContactNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmitContact = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === contactName)) {\n      alert(`${contactName} is already in Contacts`);\n      return;\n    }\n    onAddContact(contactName, contactNumber);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmitContact} className={ContactFormStl.ContactForm}>\n      <label className={ContactFormStl.label}>\n        Name\n        <input\n          type=\"text\"\n          value={contactName}\n          onChange={onInputValue}\n          name=\"contactName\"\n          className={ContactFormStl.input}\n        />\n      </label>\n      <label className={ContactFormStl.label}>\n        Phone Number\n        <input\n          type=\"text\"\n          value={contactNumber}\n          onChange={onInputValue}\n          name=\"contactNumber\"\n          className={ContactFormStl.input}\n        />\n      </label>\n      <button type=\"submit\" className={ContactFormStl.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItemStl from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, onRemove }) {\n  const { name, number } = contact;\n\n  return (\n    <li className={ContactListItemStl.container}>\n      <div className={ContactListItemStl.contactInfo}>\n        {name} : {number}\n      </div>\n      <section className={ContactListItemStl.action}>\n        <button type=\"button\" onClick={onRemove}>\n          Delete\n        </button>\n      </section>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from '../../redux/contacts/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactListStl from './ContactListItem/ContactListItem.module.css';\n\nexport default function ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onRemoveItem = id => dispatch(removeContact(id));\n\n  return (\n    <ul className={ContactListStl.contactList}>\n      {visibleContacts.map(visibleContact => (\n        <ContactListItem\n          contact={visibleContact}\n          onRemove={() => onRemoveItem(visibleContact.id)}\n          key={visibleContact.id}\n        />\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport FilterStl from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => dispatch(filterContacts(e.target.value));\n  return (\n    <div className={FilterStl.filterContainer}>\n      <label className={FilterStl.label}>\n        Find contact by name:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n          name=\"filter\"\n          className={FilterStl.input}\n        />\n      </label>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactsList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\nimport AppStl from './App.module.css';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <div className={AppStl.container}>\n      <h2 className={AppStl.heading}>PhoneBook</h2>\n      <ContactForm />\n      <h2 className={AppStl.heading}>Contacts</h2>\n\n      {contacts.length > 1 && <Filter />}\n\n      {contacts.length > 0 && <ContactsList />}\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst initialFilter = '';\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.removeContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer(initialFilter, {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\n\nconst exportedStore = { store, persistor };\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default exportedStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { Provider } from 'react-redux';\nimport exportedStore from './redux/store';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={exportedStore.store}>\n      <PersistGate loading={null} persistor={exportedStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"buttonSubmit\":\"ContactForm_buttonSubmit__12HOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__1g0r6\",\"contactInfo\":\"ContactListItem_contactInfo__1edqM\",\"action\":\"ContactListItem_action__3waij\"};"],"sourceRoot":""}